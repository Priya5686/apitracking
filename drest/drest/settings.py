"""
Django settings for drest project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

from django.conf.global_settings import AUTH_USER_MODEL


import os
import dj_database_url

# Detect if running on Render
RENDER = os.getenv("RENDER") == "1"


if RENDER:
    # Use Render-provided DATABASE_URL
    DATABASES = {
        'default': dj_database_url.config(
            default=os.environ['DATABASE_URL'],
            conn_max_age=600,
            ssl_require=True
        )
    }

    # Use direct env vars from Render
    def get_env(key):
        return os.environ[key]

else:
    # Local PostgreSQL with .env files
    from decouple import Config, RepositoryEnv
    ENV = os.getenv("DJANGO_ENV", "development")
    env_file = f".env.{ENV}"
    config = Config(RepositoryEnv(env_file))

    DATABASES = {
        'default': dj_database_url.config(
            default=config('DATABASE_URL')
        )
    }

    def get_env(key):
        return config(key)
    

#SITE_URL = os.getenv('SITE_URL', 'https://testservice-qh07.onrender.com') 

SITE_URL = "https://testservice-qh07.onrender.com"
OAUTH_AUTHORIZE_URL = f"{SITE_URL}/o/authorize/" 
OAUTH_TOKEN_URL = f"{SITE_URL}/o/token/"  
OAUTH_CLIENT_ID = get_env('OAUTH_CLIENT_ID')
OAUTH_CLIENT_SECRET = get_env('OAUTH_CLIENT_SECRET')
JWT_SECRET_KEY = get_env('JWT_SECRET_KEY')
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = get_env('SOCIAL_AUTH_GOOGLE_OAUTH2_KEY')
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = get_env('SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET')
AVIATIONAPI_KEY = get_env('AVIATIONAPI_KEY')





#This is working one. If nothing works will fix this

"""import os
from decouple import Config, RepositoryEnv 

ENV = os.getenv("DJANGO_ENV", "development")
env_file = f".env.{ENV}"
config = Config(RepositoryEnv(env_file))


OAUTH_CLIENT_ID = config('OAUTH_CLIENT_ID')
OAUTH_CLIENT_SECRET = config('OAUTH_CLIENT_SECRET')
JWT_SECRET_KEY = config('JWT_SECRET_KEY')
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = config('SOCIAL_AUTH_GOOGLE_OAUTH2_KEY')
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = config('SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET')
AVIATIONAPI_KEY = config('AVIATIONAPI_KEY')"""




# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/


SECRET_KEY = 'django-insecure-_kqm18y_jv8_k6kivh5w%$-8+=z2!jouh4^0gs+j^c@=_p8f!7'


DEBUG = True

ALLOWED_HOSTS = ['testservice-qh07.onrender.com']

#ALLOWED_HOSTS = []

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.auth',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'drestapp',
    'oauth2_provider',
    'rest_framework',
    'corsheaders',
    'social_django',
    'flights',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'oauth2_provider.middleware.OAuth2TokenMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    #'drestapp.middleware.access_token.AccessTokenMiddleware',
    #'drestapp.middleware.dashboard_access.DashboardAccessMiddleware',
    #'drestapp.middleware.log_request_time.LogRequestTimeMiddleware',
]

AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',
    'oauth2_provider.backends.OAuth2Backend',
    'drestapp.backends.EmailBackend',
    'drestapp.backends.OAuth2CookieBackend',
    'django.contrib.auth.backends.ModelBackend',
)

CORS_ORIGIN_ALLOW_ALL = True

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        #'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}


OAUTH2_PROVIDER = {
    'ALLOW_GRANT_TYPE_FOR_PUBLIC_CLIENTS': True,
    'REQUEST_APPROVAL_PROMPT': 'auto',
    'ALLOWED_REDIRECT_URI_SCHEMES': ['http', 'https'],
    'AUTHORIZATION_CODE_EXPIRE_SECONDS': 1000,
    'ACCESS_TOKEN_EXPIRE_SECONDS': 600,   #10 mts
    'REFRESH_TOKEN_EXPIRE_SECONDS': 86400, # 1 day
    'ROTATE_REFRESH_TOKEN': False,
    'OAUTH2_BACKEND_CLASS':'oauth2_provider.oauth2_backends.OAuthLibCore',
    'SCOPES': {'read': 'Read scope', 'write': 'Write scope'},
    'PKCE_REQUIRED': True,
}

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',

    'drestapp.pipeline.link_to_existing_user',

    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',

    'social_core.pipeline.user.create_user',
    'social_core.pipeline.social_auth.associate_user',

    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
    
    'drestapp.pipeline.save_emails_to_db'
    #'drestapp.pipeline.save_emails_to_google_sheet',
)
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile',
    'https://www.googleapis.com/auth/gmail.readonly',
    #'https://www.googleapis.com/auth/spreadsheets',
]
SOCIAL_AUTH_GOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS = {
    #'prompt': 'select_account consent',
    'access_type': 'offline',
}
SOCIAL_AUTH_GOOGLE_OAUTH2_EXTRA_DATA = ['access_token', 'refresh_token', 'expires']


SOCIAL_AUTH_GOOGLE_OAUTH2_REDIRECT_URI = 'http://127.0.0.1:8000/social-auth/complete/google-oauth2/'
#SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/dashboard/'
SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/oauth/success/'
SOCIAL_AUTH_LOGOUT_REDIRECT_URL = '/login/'

LOGIN_URL = "/login/"
LOGIN_REDIRECT_URL = '/dashboard/'
#LOGOUT_REDIRECT_URL = '/'

ROOT_URLCONF = 'drest.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "drestapp" / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.csrf',
                'django.contrib.messages.context_processors.messages'
                ,
            ],
        },
    },
]

WSGI_APPLICATION = 'drest.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

"""DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'gmailsyncdb',
        'USER': 'priya',
        'PASSWORD': 'ainotify',
        'HOST': 'localhost',  # or your PostgreSQL server IP
        'PORT': '5432',        # default PostgreSQL port
    }
}"""





# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = False

USE_TZ = True

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "drest", "static")
]

STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")  # For collectstatic on deployment



#STATIC_URL = '/static/'

#STATICFILES_DIRS = os.path.join[BASE_DIR / "drest" / "static"]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'drestapp.CustomUser'

#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

#SITE_URL = "http://127.0.0.1:8000"

#SESSION_COOKIE_AGE = 1209600  # Two weeks
#SESSION_ENGINE = 'django.contrib.sessions.backends.db'
#SESSION_SAVE_EVERY_REQUEST = True


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'testprojectapp1234@gmail.com'
EMAIL_HOST_PASSWORD = 'uzgh hqmh sfqk yoea'
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


LOGGING = {
    'version': 1,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
}











